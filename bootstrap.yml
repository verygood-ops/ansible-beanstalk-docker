---
- hosts: all
  vars:
    citadel_bucket: 'balanced-citadel'
    bootstrapping_docker_image: balanced/infra-global:experimental
    inceptor_home: /tmp/ansible_inception
    docker_config: "{{ lookup('citadel', 'docker/.dockercfg') | from_json }}"

  handlers:
    - name: restart ssh
      service: name=sshd state=restarted

  tasks:
    - name: Gather facts
      ec2_facts: validate_certs=no

    - name: Installing docker-py for ansible docker module
      pip: name=docker-py==0.7.0 state=present
      with_items:
        - "docker-py==0.7.0"
        - "boto==2.35.0"

    # pay close attention, this is inception!

    - name: Create ansible bootstrapping user "inceptor"
      file:
        path: "{{ inceptor_home }}/.ssh"
        owner: ec2-user
        recurse: yes
        state: directory

    - name: Create a one-time SSH key
      shell: >
        ssh-keygen -t rsa -N '' -f "{{ inceptor_home }}/.ssh/inceptor" &&
        chown ec2-user: -R "{{ inceptor_home }}/.ssh"
      args:
        creates: "{{ inceptor_home }}/.ssh/inceptor"

#    - name: Change user and group to ec2-user
#      shell: 'chown ec2-user: -R "{{ inceptor_home }}"'

    # AuthorizedKeysFile to point to '%h/.ssh/authorized_keys /etc/ssh/%u/authorized_keys
    # - Going to disable this since not every OpenSSH server supports multiple
    #   authorized_keys
#    - name: Respect /etc/ssh/%u/authorized_keys
#      lineinfile:
#        destfile: /etc/ssh/sshd_config
#        regexp: '^#?AuthorizedKeysFile\s+.ssh/authorized_keys'
#        line: "AuthorizedKeysFile .ssh/authorized_keys /etc/ssh/%u/authorized_keys"
#        backrefs: yes
#        state: present
#      notify:
#        - restart ssh

    - name: slurp generated authorized_keys
      slurp: src="{{ inceptor_home }}/.ssh/inceptor.pub"
      register: public_ssh_key

    - name: Add generated key to ec2-user authorized_keys
      authorized_key:
        user: ec2-user
        key: "{{ public_ssh_key.content | b64decode | trim }}"
        state: present

    - name: Dump local ipv4 to inventory
      copy:
        content: "{{ ansible_ec2_local_ipv4 }}"
        dest: "{{ inceptor_home }}/inventory"
        owner: ec2-user

    - name: Setup private docker registry credentialing
      copy:
        content: "{{ docker_config | to_json }}"
        dest: /root/.dockercfg
        mode: 0600

    - name: Pull bootstrapper image
      shell: docker pull {{ bootstrapping_docker_image }}
      args:
        chdir: /root

    # do I have to read the secrets? not sure..

    - name: bootstrap!
      docker:
        state: running
        detach: False
        docker_api_version: "{{ docker_api_version | default('1.3.3') }}"
        image: "{{ bootstrapping_docker_image }}"
        env:
          ANSIBLE_HOST_KEY_CHECKING: "NO"
        volumes:
          - '/var/log:/var/log'
          - "{{ inceptor_home }}:{{ inceptor_home }}"
        command: >
          'ansible-playbook /srv/infra-global/bootstrap_users.yml  \
            --inventory-file={{ inceptor_home }}/inventory         \
            --private-key={{ inceptor_home }}/.ssh/inceptor        \
            --user=ec2-user                                        \
            -e aws_account=poundpay                                \
            -e balanced_users_rm_default_ec2_keyname=false         \
            -vvvv 2>&1 | tee /var/log/ansible-inception.log'

#    - name: Remove generated key to ec2-user authorized_keys
#      authorized_key:
#        user: ec2-user
#        key: "{{ lookup('file', inceptor_home ~ '/.ssh/inceptor.pub') }}"
#        path: /etc/ssh/ec2-user/authorized_keys
#        manage_dir: no
#        state: absent